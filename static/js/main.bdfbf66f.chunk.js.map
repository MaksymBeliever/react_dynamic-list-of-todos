{"version":3,"sources":["components/TodosFiltration/TodosFiltration.tsx","api/api.ts","components/TodoList/TodoList.tsx","components/Spinner/Spinner.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["Status","getData","endpoint","fetch","then","response","ok","Error","statusText","json","TodosFiltration","props","renderStatus","query","htmlFor","className","type","value","id","onChange","event","target","preventDefault","searchByTitle","name","changeShowStatus","TodoList","state","todos","all","filteredTodos","filter","todo","title","includes","setState","showTodosByStatus","active","completed","this","loadData","_prevProps","prevState","a","selectedUserId","map","classNames","checked","readOnly","userId","onClick","chooseUser","React","Component","Spinner","CurrentUser","email","phone","loadUser","prevProps","user","App","reset","ReactDOM","render","document","getElementById"],"mappings":"uRAIYA,E,oGCFCC,EAAU,SAACC,GACtB,OAAOC,MAAM,GAAD,OAHE,oCAGF,YAAeD,IACxBE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,YAG3B,OAAOH,EAASI,W,yBDLVT,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KAaL,IAAMU,EAAmC,SAACC,GAC/C,IAgBQC,EAAwBD,EAAxBC,aAAcC,EAAUF,EAAVE,MAEtB,OACE,qCACE,wBAAOC,QAAQ,gBAAf,UACG,oBACD,uBACEC,UAAU,sCACVC,KAAK,OACLC,MAAOJ,EACPK,GAAG,gBACHC,SAnBoB,SAACC,GAC3B,IAAQH,EAAUG,EAAMC,OAAhBJ,MAERG,EAAME,iBAENX,EAAMY,cAAcN,SAkBlB,wBAAOH,QAAQ,iBAAf,UACG,qBACD,yBACEC,UAAU,uCACVS,KAAK,iBACLN,GAAG,iBACHD,MAAOL,EACPO,SAtCiB,SAACC,GACxBA,EAAME,iBAEN,IAAQL,EAAUG,EAAMC,OAAhBJ,MAERN,EAAMc,iBAAiBR,IA4BnB,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,iCE1CGS,G,MAAb,4MACEC,MAAe,CACbC,MAAO,GACPf,MAAO,GACPD,aAAcZ,EAAO6B,KAJzB,EAiBEC,cAAgB,WACd,MAAyB,EAAKH,MAAtBd,EAAR,EAAQA,MAER,OAFA,EAAee,MAEFG,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAASD,EAAKC,MAAMC,SAASrB,OApBpE,EAuBEU,cAAgB,SAACN,GACf,EAAKkB,SAAS,CACZtB,MAAOI,KAzBb,EA6BEQ,iBAAmB,SAACR,GAClB,EAAKkB,SAAS,CACZvB,aAAcK,KA/BpB,EAmCEmB,kBAAoB,WAGlB,OAFyB,EAAKT,MAAtBf,cAGN,KAAKZ,EAAOqC,OACV,OAAO,EAAKP,gBAAgBC,QAAO,SAAAC,GAAI,OAAKA,EAAKM,aAEnD,KAAKtC,EAAOsC,UACV,OAAO,EAAKR,gBAAgBC,QAAO,SAAAC,GAAI,OAAIA,EAAKM,aAElD,KAAKtC,EAAO6B,IACZ,QACE,OAAO,EAAKC,kBA/CpB,uDAOE,WACES,KAAKC,aART,gCAWE,SAAmBC,EAAmBC,GAChCA,EAAU7B,QAAU0B,KAAKZ,MAAMd,OACjC0B,KAAKH,sBAbX,6DAmDE,4BAAAO,EAAA,sEDnDO1C,EAAQ,SCmDf,OACQ2B,EADR,OAGEW,KAAKJ,SAAS,CACZP,UAJJ,gDAnDF,0EA2DE,WAAU,IAAD,OACP,EAAgCW,KAAKZ,MAA7Bd,EAAR,EAAQA,MAAOD,EAAf,EAAeA,aACPgC,EAAmBL,KAAK5B,MAAxBiC,eAER,OACE,sBAAK7B,UAAU,WAAf,UACE,oBAAIA,UAAU,kBAAd,oBAEA,qBAAKA,UAAU,uBAAf,SACE,cAAC,EAAD,CACEU,iBAAkBc,KAAKd,iBACvBF,cAAegB,KAAKhB,cACpBX,aAAcA,EACdC,MAAOA,MAIX,qBAAKE,UAAU,2BAAf,SACE,oBAAIA,UAAU,iBAAd,SACGwB,KAAKH,oBAAoBS,KAAI,SAAAb,GAAI,OAChC,qBACEjB,UAAW+B,IACT,iBACA,CACE,6BAA8Bd,EAAKM,UACnC,0BAA2BN,EAAKM,YALtC,UAUE,kCACE,uBACEtB,KAAK,WACL+B,QAASf,EAAKM,UACdU,UAAQ,IAEV,4BAAIhB,EAAKC,WAGX,wBACElB,UAAW+B,IACT,wBACA,SACA,CACE,kCAAmCd,EAAKiB,SAAWL,IAGvD5B,KAAK,SACLkC,QAAS,SAAC9B,GACRA,EAAME,iBACN,EAAKX,MAAMwC,WAAWnB,EAAKiB,SAX/B,yBAcYjB,EAAKiB,YAzBZjB,EAAKd,kBAvF1B,GAA8BkC,IAAMC,Y,QCdvBC,G,MAAoB,kBAC/B,qBAAKvC,UAAU,UAAf,SACE,sBAAKA,UAAU,aAAf,UACE,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,wBACA,+BCGOwC,G,MAAb,4MACE5B,MAAe,CACbT,GAAI,EACJM,KAAM,GACNgC,MAAO,GACPC,MAAO,IALX,uDAQE,WACElB,KAAKmB,aATT,gCAYE,SAAmBC,GACjB,IAAQf,EAAmBL,KAAK5B,MAAxBiC,eAEJe,EAAUf,iBAAmBA,GAC/BL,KAAKmB,aAhBX,6DAoBE,8BAAAf,EAAA,6DACUC,EAAmBL,KAAK5B,MAAxBiC,eAERL,KAAKJ,SAAS,CACZjB,GAAI,IAJR,SHvBOjB,EAAQ,SAAD,OG8BqB2C,IAPnC,OAOQgB,EAPR,OASErB,KAAKJ,SAAL,eACKyB,IAVP,gDApBF,0EAkCE,WACE,MAKIrB,KAAKZ,MAJPT,EADF,EACEA,GACAM,EAFF,EAEEA,KACAiC,EAHF,EAGEA,MACAD,EAJF,EAIEA,MAGML,EAAeZ,KAAK5B,MAApBwC,WAER,OAAW,IAAPjC,EAEA,cAAC,EAAD,IAKF,sBAAKH,UAAU,cAAf,UACE,oBAAIA,UAAU,qBAAd,SACE,wDACqBG,OAIvB,oBAAIH,UAAU,oBAAd,SAAmCS,IACnC,mBAAGT,UAAU,qBAAb,SAAmCyC,IACnC,mBAAGzC,UAAU,qBAAb,SAAmC0C,IAEnC,wBACEzC,KAAK,SACLD,UAAU,6BACVmC,QAAS,kBAAMC,EAAW,IAH5B,0BA9DR,GAAiCC,IAAMC,YCN1BQ,G,YAAb,4MACElC,MAAe,CACbiB,eAAgB,GAFpB,EAKEO,WAAa,SAACF,GACZ,EAAKa,QACL,EAAK3B,SAAS,CACZS,eAAgBK,KARtB,EAYEa,MAAQ,WACN,EAAK3B,SAAS,CACZS,eAAgB,KAdtB,4CAkBE,WACE,IAAQA,EAAmBL,KAAKZ,MAAxBiB,eAER,OACE,sBAAK7B,UAAU,MAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEoC,WAAYZ,KAAKY,WACjBP,eAAgBA,MAIpB,qBAAK7B,UAAU,eAAf,SACE,qBAAKA,UAAU,yBAAf,SACG6B,EACC,cAAC,EAAD,CACEA,eAAgBA,EAChBO,WAAYZ,KAAKY,aAEjB,8BArChB,GAAyBC,IAAMC,YCR/BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bdfbf66f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './TodoFiltrarion.scss';\n\nexport enum Status {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\ninterface Props {\n  changeShowStatus: (value: Status) => void;\n  searchByTitle: (value: string) => void;\n  renderStatus: Status;\n  query: string;\n}\n\nexport const TodosFiltration: React.FC<Props> = (props) => {\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n\n    const { value } = event.target;\n\n    props.changeShowStatus(value as Status);\n  };\n\n  const handleSearchByTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    event.preventDefault();\n\n    props.searchByTitle(value);\n  };\n\n  const { renderStatus, query } = props;\n\n  return (\n    <>\n      <label htmlFor=\"searchByTitle\">\n        {'Search by title: '}\n        <input\n          className=\"Todos-filtration-field filter_field\"\n          type=\"text\"\n          value={query}\n          id=\"searchByTitle\"\n          onChange={handleSearchByTitle}\n        />\n      </label>\n\n      <label htmlFor=\"filterByStatus\">\n        {'Filter by status: '}\n        <select\n          className=\"Todos-filtration-field filter__field\"\n          name=\"filterByStatus\"\n          id=\"filterByStatus\"\n          value={renderStatus}\n          onChange={handleChangeUser}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </label>\n    </>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport const getData = (endpoint: string) => {\n  return fetch(`${API_URL}/${endpoint}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getUser = (userId: number) => {\n  return getData(`users/${userId}`);\n};\n\nexport const getTodos = () => {\n  return getData('todos');\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getTodos } from '../../api';\nimport { TodosFiltration, Status } from '../TodosFiltration';\n\nimport './TodoList.scss';\n\ninterface State {\n  todos: Todo[];\n  query: string;\n  renderStatus: Status;\n}\n\ninterface Props {\n  chooseUser: (userId: number) => void;\n  selectedUserId: number;\n}\n\nexport class TodoList extends React.Component<Props, State> {\n  state: State = {\n    todos: [],\n    query: '',\n    renderStatus: Status.all,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(_prevProps: Props, prevState: State) {\n    if (prevState.query !== this.state.query) {\n      this.showTodosByStatus();\n    }\n  }\n\n  filteredTodos = () => {\n    const { query, todos } = this.state;\n\n    return todos.filter((todo) => todo.title && todo.title.includes(query));\n  };\n\n  searchByTitle = (value: string) => {\n    this.setState({\n      query: value,\n    });\n  };\n\n  changeShowStatus = (value: Status) => {\n    this.setState({\n      renderStatus: value as Status,\n    });\n  };\n\n  showTodosByStatus = () => {\n    const { renderStatus } = this.state;\n\n    switch (renderStatus) {\n      case Status.active:\n        return this.filteredTodos().filter(todo => !todo.completed);\n\n      case Status.completed:\n        return this.filteredTodos().filter(todo => todo.completed);\n\n      case Status.all:\n      default:\n        return this.filteredTodos();\n    }\n  };\n\n  async loadData() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n    });\n  }\n\n  render() {\n    const { query, renderStatus } = this.state;\n    const { selectedUserId } = this.props;\n\n    return (\n      <div className=\"TodoList\">\n        <h2 className=\"TodoList__title\">Todos:</h2>\n\n        <div className=\"TodoList__filtrarion\">\n          <TodosFiltration\n            changeShowStatus={this.changeShowStatus}\n            searchByTitle={this.searchByTitle}\n            renderStatus={renderStatus}\n            query={query}\n          />\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {this.showTodosByStatus().map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--unchecked': !todo.completed,\n                    'TodoList__item--checked': todo.completed,\n                  },\n                )}\n                key={todo.id}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    readOnly\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames(\n                    'TodoList__user-button',\n                    'button',\n                    {\n                      'TodoList__user-button--selected': todo.userId === selectedUserId,\n                    },\n                  )}\n                  type=\"button\"\n                  onClick={(event: React.MouseEvent<HTMLButtonElement>) => {\n                    event.preventDefault();\n                    this.props.chooseUser(todo.userId);\n                  }}\n                >\n                  {`User #${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './Spinner.scss';\n\nexport const Spinner: React.FC = () => (\n  <div className=\"Spinner\">\n    <div className=\"lds-roller\">\n      <div>{}</div>\n      <div>{}</div>\n      <div>{}</div>\n      <div>{}</div>\n      <div>{}</div>\n      <div>{}</div>\n      <div>{}</div>\n      <div>{}</div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport { getUser } from '../../api';\nimport { Spinner } from '../Spinner';\n\nimport './CurrentUser.scss';\n\ninterface Props {\n  selectedUserId: number;\n  chooseUser: (userId: number) => void;\n}\n\ninterface State {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n}\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  };\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { selectedUserId } = this.props;\n\n    if (prevProps.selectedUserId !== selectedUserId) {\n      this.loadUser();\n    }\n  }\n\n  async loadUser() {\n    const { selectedUserId } = this.props;\n\n    this.setState({\n      id: 0,\n    });\n\n    const user: User = await getUser(selectedUserId);\n\n    this.setState({\n      ...user,\n    } as User);\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      phone,\n      email,\n    } = this.state;\n\n    const { chooseUser } = this.props;\n\n    if (id === 0) {\n      return (\n        <Spinner />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            {`Selected user: ${id}`}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__button button\"\n          onClick={() => chooseUser(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport './App.scss';\nimport './styles/general.scss';\n\ninterface State {\n  selectedUserId: number;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n  };\n\n  chooseUser = (userId: number) => {\n    this.reset();\n    this.setState({\n      selectedUserId: userId,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  };\n\n  render() {\n    const { selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            chooseUser={this.chooseUser}\n            selectedUserId={selectedUserId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                chooseUser={this.chooseUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}